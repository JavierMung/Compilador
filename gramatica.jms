module.exports.grammar = [
    { "name": "Program", "symbols": ["TypeId", "Decl"] },
    { "name": "Program", "symbols": ["void", "ID", "Funcs"] },
    { "name": "TypeId", "symbols": ["TypeSpec", "ID"] },
    { "name": "Decl", "symbols": ["Vars"] },
    { "name": "Decl", "symbols": ["Funcs"] },
    { "name": "TypeSpec", "symbols": ["int"] },
    { "name": "TypeSpec", "symbols": ["char"] },
    { "name": "TypeSpec", "symbols": ["bool"] },
    { "name": "TypeSpec", "symbols": ["float"] },
    { "name": "Vars", "symbols": ["ArrayDecl", "VarDeclInit", "DecList", ";", "Decl2"] },
    { "name": "ArrayDecl", "symbols": ["[", "NUMCONST", "]"] },
    { "name": "ArrayDecl", "symbols": ["E"] },
    { "name": "VarDeclInit", "symbols": ["=", "Expresion"] },
    { "name": "VarDeclInit", "symbols": ["E"] },
    { "name": "DecList", "symbols": [",", "VarNames"] },
    { "name": "DecList", "symbols": ["E"] },
    { "name": "VarNames", "symbols": ["ID", "ArrayDecl", "VarDeclInit", "DecList"] },
    { "name": "Decl2", "symbols": ["TypeId", "Decl"] },
    { "name": "Decl2", "symbols": ["void", "ID", "Funcs"] },
    { "name": "Funcs", "symbols": ["(", "Params", ")", "stmt", "FunDecListPrima"] },
    { "name": "FunDecListPrima", "symbols": ["FunDecList", "FunDecListPrima"] },
    { "name": "FunDecListPrima", "symbols": ["E"] },
    { "name": "FunDecList", "symbols": ["TypeSpec", "ID", "(", "params", ")"] },
    { "name": "FunDecList", "symbols": ["void", , "ID", "(", "params", ")"] },
    { "name": "Params", "symbols": ["Param", "ParamsPrima"] },
    { "name": "Params", "symbols": ["E"] },
    { "name": "ParamsPrima", "symbols": [",", "Param", "ParamsPrima"] },
    { "name": "ParamsPrima", "symbols": ["E"] },
    { "name": "Param", "symbols": ["TypeSpec", "ID"] },
    { "name": "FuncStmt", "symbols": ["{", "Stmts", "ReturnStmt", "}"] },
    { "name": "ReturnStmt", "symbols": ["return", ";"] },
    { "name": "ReturnStmt", "symbols": ["return", "exp", ";"] },
    { "name": "ReturnStmt", "symbols": ["E"] },
    { "name": "Stmts", "symbols": ["Stmt", "Stmts"] },
    { "name": "Stmts", "symbols": ["E"] },
    { "name": "Stmt", "symbols": ["ExprStmt"] },
    { "name": "Stmt", "symbols": ["IfStmt"] },
    { "name": "Stmt", "symbols": ["WhileStmt"] },
    { "name": "Stmt", "symbols": ["ForStmt"] },
    { "name": "ExprStmt", "symbols": ["Expresion", ";"] },
    { "name": "Expresion", "symbols": ["Assignement"] },
    { "name": "Assignement", "symbols": ["ID", "=", "Assignement"] },
    { "name": "Assignement", "symbols": ["LogicOr"] },
    { "name": "LogicOr", "symbols": ["LogicAnd", "LogicOrPrima"] },
    { "name": "LogicOrPrima", "symbols": ["||", "LogicAnd", "LogicOrPrima"] },
    { "name": "LogicOrPrima", "symbols": ["E"] },
    { "name": "LogicAnd", "symbols": ["Equality", "LogicAndPrima"] },
    { "name": "LogicAndPrima", "symbols": ["&&", "Equality", "LogicAndPrima"] },
    { "name": "LogicAndPrima", "symbols": ["E"] },
    { "name": "Equality", "symbols": ["Comparison", "EqualityPrima"] },
    { "name": "EqualityPrima", "symbols": ["CompOper", "Comparison", "EqualityPrima"] },
    { "name": "CompOper", "symbols": ["ยก", "="] },
    { "name": "CompOper", "symbols": ["=", "="] },
    { "name": "Comparison", "symbols": ["Term", "ComparisonPrima"] },
    { "name": "ComparisonPrima", "symbols": ["LogicOperator", "Term", "ComparisonPrima"] },
    { "name": "ComparisonPrima", "symbols": ["E"] },
    { "name": "LogicOperator", "symbols": [">"] },
    { "name": "LogicOperator", "symbols": [">="] },
    { "name": "LogicOperator", "symbols": ["<"] },
    { "name": "LogicOperator", "symbols": ["<="] },
    { "name": "Term", "symbols": ["Factor", "TermPrima"] },
    { "name": "TermPrima", "symbols": ["-", "Factor", "TermPrima"] },
    { "name": "TermPrima", "symbols": ["+", "Factor", "TermPrima"] },
    { "name": "TermPrima", "symbols": ["E"] },
    { "name": "Factor", "symbols": ["Unary", "FactorPrima"] },
    { "name": "FactorPrima", "symbols": ["/", "Unary", "FactorPrima"] },
    { "name": "FactorPrima", "symbols": ["*", "Unary", "FactorPrima"] },
    { "name": "FactorPrima", "symbols": ["E"] },
    { "name": "Unary", "symbols": ["UnaryOp", "Unary"] },
    { "name": "Unary", "symbols": ["Call"] },
    { "name": "UnaryOp", "symbols": ["!"] },
    { "name": "UnaryOp", "symbols": ["-"] },
    { "name": "Call", "symbols": ["Primary", "CallFunc"] },
    { "name": "CallFunc", "symbols": ["(", "Params", ")"] },
    { "name": "CallFunc", "symbols": ["E"] },
    { "name": "Primary", "symbols": ["true"] },
    { "name": "Primary", "symbols": ["false"] },
    { "name": "Primary", "symbols": ["NUMBER"] },
    { "name": "Primary", "symbols": ["STRING"] },
    { "name": "Primary", "symbols": ["ID"] },
    { "name": "Primary", "symbols": ["(", "Expresion", ")"] },
    { "name": "IfStmt", "symbols": ["IF", "(", "Expresion", ")", "{", "Stmts", "}", "ElseStmt"] },
    { "name": "ElseStmt", "symbols": ["else", "{", "Stmts", "}"] },
    { "name": "ElseStmt", "symbols": ["E"] },
    { "name": "WhileStmt", "symbols": ["while", "(", "Expresion", ")", "{", "Stmts", "}"] },
    { "name": "ForStmt", "symbols": ["for", "(", "ForExpr", ";", "ForExpr", ";", "ForExpr", ")", "{", "Stmts", "}"] },
    { "name": "ForExpr", "symbols": ["Expresion"] },
    { "name": "ForExpr", "symbols": ["E"] }]
  
  module.exports.simbolos = [
    "Program",
    "TypeId",
    "Decl",
    "TypeSpec",
    "Vars",
    "ArrayDecl",
    "VarDeclInit",
    "DecList",
    "VarNames",
    "Decl2",
    "Funcs",
    "FunDecListPrima",
    "FunDecList",
    "Params",
    "ParamsPrima",
    "Param",
    "FuncStmt",
    "ReturnStmt",
    "Stmts",
    "Stmt",
    "ExprStmt",
    "Expresion",
    "Assignement",
    "LogicOr",
    "LogicOrPrima",
    "LogicAnd",
    "LogicAndPrima",
    "Equality",
    "EqualityPrima",
    "CompOper",
    "Comparison",
    "ComparisonPrima",
    "LogicOperator",
    "Term",
    "TermPrima",
    "Factor",
    "FactorPrima",
    "Unary",
    "UnaryOp",
    "Call",
    "CallFunc",
    "Primary",
    "IfStmt",
    "ElseStmt",
    "WhileStmt",
    "ForStmt",
    "ForExpr"]